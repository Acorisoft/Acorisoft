<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:c="clr-namespace:Acorisoft.Extensions.Platforms.Windows.Controls"
                    xmlns:pb="clr-namespace:Acorisoft.Extensions.Platforms.Windows.Controls.Primitives"
                    xmlns:d="clr-namespace:Acorisoft.Extensions.Platforms.Windows.Controls.Dialogs"
                    xmlns:bi="clr-namespace:Acorisoft.Extensions.Platforms.Windows.Controls.BusyIndicator"
                    xmlns:p="clr-namespace:Acorisoft.Extensions.Platforms.Windows.Controls.Panels"
                    xmlns:t="clr-namespace:Acorisoft.Extensions.Platforms.Windows.Controls.Toasts"
                    xmlns:w="clr-namespace:Acorisoft.Extensions.Platforms.Windows"
                    xmlns:cmds="clr-namespace:Acorisoft.Extensions.Platforms.Windows.Commands"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:rx="http://reactiveui.net"
                    xmlns:vm="clr-namespace:Acorisoft.Extensions.Platforms.Windows.ViewModels;assembly=Acorisoft.Extensions.Platforms"
                    xmlns:o="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Acorisoft.Extensions.Platforms.Windows;component/Windows/SpaWindow.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Acorisoft.Extensions.Platforms.Windows;component/Windows/Controls/IxContentHost.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Acorisoft.Extensions.Platforms.Windows;component/Themes/Banner.xaml" />
    </ResourceDictionary.MergedDictionaries>
    
    <SolidColorBrush x:Key="App.Dark.Mask">#90000000</SolidColorBrush>
    <SolidColorBrush x:Key="App.Dark.Lighten.Mask">#30000000</SolidColorBrush>
    <SolidColorBrush x:Key="App.White.Lighten.Mask">#50FFFFFF</SolidColorBrush>
    <SolidColorBrush x:Key="App.White.Darken.Mask">#90FFFFFF</SolidColorBrush>

    <Style TargetType="{x:Type pb:CloseButton}">
        <Setter Property="MinHeight" Value="32" />
        <Setter Property="MinWidth" Value="32" />
        <Setter Property="Background" Value="{StaticResource Brushes.Transparent}" />
        <Setter Property="Foreground" Value="{StaticResource Brushes.White}" />
        <Setter Property="HoverBackgroundBrush" Value="{StaticResource App.Dark.Lighten.Mask}" />
        <Setter Property="HoverForegroundBrush" Value="{StaticResource Brushes.Black}" />
        <Setter Property="PressBackgroundBrush" Value="{StaticResource App.Dark.Mask}" />
        <Setter Property="PressForegroundBrush" Value="{StaticResource Brushes.Black}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type pb:CloseButton}">
                    <Border x:Name="PART_Border" Background="{TemplateBinding Background}">
                        <Path x:Name="PART_Icon" 
                              Data="M0.7,0 L5,4.3 L9.3,0 L10,0.7 L5.7,5 L10,9.3 L9.3,10 L5,5.7 L0.7,10 L0,9.3 L4.3,5 L0,0.7 z"
                              Width="15"
                              Height="15"
                              SnapsToDevicePixels="True"
                              Stretch="Uniform"
                              Fill="{TemplateBinding Foreground}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=HoverBackgroundBrush}" TargetName="PART_Border"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=PressBackgroundBrush}" TargetName="PART_Border"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- 
        烦躁指示器
        @ 用来给用户制造烦躁感的指示器。
    --> 
    
    <Style TargetType="{x:Type bi:BusyIndicator}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type bi:BusyIndicator}">
                    <p:TiledPanel>
                        <ContentPresenter ContentSource="Content" />

                        <!-- 对话框-->
                        <Border x:Name="PART_Border" Background="{StaticResource App.Dark.Lighten.Mask}" Visibility="Collapsed">
                            <!-- 对话框载体需要自己设置一个长度和宽度 -->
                            <Border Background="White"
                                    Padding="16"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Center"
                                    Width="160">
                                <StackPanel>
                                    <TextBlock Text="{TemplateBinding Description}"
                                               Padding="0 0 0 8"
                                               FontSize="13"
                                               TextWrapping="Wrap"/>
                                    <ProgressBar x:Name="PART_Indicator"
                                                 IsIndeterminate="True" 
                                                 MinHeight="6"/>
                                </StackPanel>
                            </Border>
                        </Border>
                    </p:TiledPanel>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="DialogOpening">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Border"
                                                                   Storyboard.TargetProperty="(UIElement.Visibility)">
                                        <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                            <DiscreteObjectKeyFrame.Value>
                                                <Visibility>Visible</Visibility>
                                            </DiscreteObjectKeyFrame.Value>
                                        </DiscreteObjectKeyFrame>
                                    </ObjectAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Border"
                                                                   Storyboard.TargetProperty="(UIElement.Opacity)">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0" Value="0" />
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.400" Value="1" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="DialogClosing">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Border"
                                                                   Storyboard.TargetProperty="(UIElement.Visibility)">
                                        <DiscreteObjectKeyFrame KeyTime="0:0:0.500">
                                            <DiscreteObjectKeyFrame.Value>
                                                <Visibility>Collapsed</Visibility>
                                            </DiscreteObjectKeyFrame.Value>
                                        </DiscreteObjectKeyFrame>
                                    </ObjectAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Border"
                                                                   Storyboard.TargetProperty="(UIElement.Opacity)">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0" Value="1" />
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.400" Value="0" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- 
        空状态视图
        @ 用来给用户制造烦躁感的指示器。
    -->
    <Style TargetType="{x:Type c:EmptyStateView}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c:EmptyStateView}">
                    <p:TiledPanel>
                        <ContentPresenter x:Name="PART_Content" ContentSource="Content" />
                        <ContentPresenter x:Name="PART_EmptyState" ContentSource="EmptyState" />
                    </p:TiledPanel>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="ContentOpening">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Content"
                                                                   Storyboard.TargetProperty="(UIElement.Visibility)">
                                        <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                            <DiscreteObjectKeyFrame.Value>
                                                <Visibility>Visible</Visibility>
                                            </DiscreteObjectKeyFrame.Value>
                                        </DiscreteObjectKeyFrame>
                                    </ObjectAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Content"
                                                                   Storyboard.TargetProperty="(UIElement.Opacity)">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0" Value="0" />
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.400" Value="1" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="ContentClosing">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Content"
                                                                   Storyboard.TargetProperty="(UIElement.Visibility)">
                                        <DiscreteObjectKeyFrame KeyTime="0:0:0.500">
                                            <DiscreteObjectKeyFrame.Value>
                                                <Visibility>Collapsed</Visibility>
                                            </DiscreteObjectKeyFrame.Value>
                                        </DiscreteObjectKeyFrame>
                                    </ObjectAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Content"
                                                                   Storyboard.TargetProperty="(UIElement.Opacity)">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0" Value="1" />
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.400" Value="0" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="EmptyStateOpening">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_EmptyState"
                                                                   Storyboard.TargetProperty="(UIElement.Visibility)">
                                        <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                            <DiscreteObjectKeyFrame.Value>
                                                <Visibility>Visible</Visibility>
                                            </DiscreteObjectKeyFrame.Value>
                                        </DiscreteObjectKeyFrame>
                                    </ObjectAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_EmptyState"
                                                                   Storyboard.TargetProperty="(UIElement.Opacity)">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0" Value="0" />
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.400" Value="1" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="EmptyStateClosing">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_EmptyState"
                                                                   Storyboard.TargetProperty="(UIElement.Visibility)">
                                        <DiscreteObjectKeyFrame KeyTime="0:0:0.500">
                                            <DiscreteObjectKeyFrame.Value>
                                                <Visibility>Collapsed</Visibility>
                                            </DiscreteObjectKeyFrame.Value>
                                        </DiscreteObjectKeyFrame>
                                    </ObjectAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_EmptyState"
                                                                   Storyboard.TargetProperty="(UIElement.Opacity)">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0" Value="1" />
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.400" Value="0" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- 
        对话框宿主
        @ 用来给用户制造烦躁感的指示器。
    -->
    <Style TargetType="{x:Type d:DialogHost}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type d:DialogHost}">
                    <p:TiledPanel>
                        <ContentPresenter ContentSource="Content" />

                        <!-- 对话框-->
                        <Border x:Name="PART_Dialog" Background="{StaticResource App.Dark.Mask}" Visibility="Collapsed">

                            <!-- 对话框载体需要自己设置一个长度和宽度 -->
                            <rx:ViewModelViewHost ViewModel="{TemplateBinding Dialog}"
                                                  HorizontalAlignment="Center"
                                                  VerticalAlignment="Center"
                                                  HorizontalContentAlignment="Center"
                                                  VerticalContentAlignment="Center"
                                                  MinWidth="96"
                                                  MinHeight="96"
                                                  Duration="0:0:0"/>
                        </Border>
                    </p:TiledPanel>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="DialogOpening">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Dialog"
                                                                   Storyboard.TargetProperty="(UIElement.Visibility)">
                                        <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                            <DiscreteObjectKeyFrame.Value>
                                                <Visibility>Visible</Visibility>
                                            </DiscreteObjectKeyFrame.Value>
                                        </DiscreteObjectKeyFrame>
                                    </ObjectAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Dialog"
                                                                   Storyboard.TargetProperty="(UIElement.Opacity)">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0" Value="0" />
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.400" Value="1" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="DialogClosing">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Dialog"
                                                                   Storyboard.TargetProperty="(UIElement.Visibility)">
                                        <DiscreteObjectKeyFrame KeyTime="0:0:0.500">
                                            <DiscreteObjectKeyFrame.Value>
                                                <Visibility>Collapsed</Visibility>
                                            </DiscreteObjectKeyFrame.Value>
                                        </DiscreteObjectKeyFrame>
                                    </ObjectAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Dialog"
                                                                   Storyboard.TargetProperty="(UIElement.Opacity)">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0" Value="1" />
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.400" Value="0" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- 
        对话框宿主
        @ 用来给用户制造烦躁感的指示器。
    -->
    <Style TargetType="{x:Type t:ToastHost}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type t:ToastHost}">
                    <p:TiledPanel>
                        <ContentPresenter ContentSource="Content" />

                        <!-- 对话框-->
                        <ContentPresenter ContentSource="Toast" 
                                          VerticalAlignment="Center"
                                          HorizontalAlignment="Center"/>
                    </p:TiledPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- 
        对话框宿主
        @ 用来给用户制造烦躁感的指示器。
    -->
    <Style TargetType="{x:Type t:Toast}">
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type t:Toast}">
                    <!-- 对话框-->
                    <Border x:Name="Bd" 
                            Background="#FFDA96" 
                            BorderThickness="1"
                            BorderBrush="#FFAB12"
                            Visibility="Collapsed" 
                            Padding="24 4"
                            MinWidth="64"
                            MinHeight="24"
                            DataContext="{TemplateBinding DataContext}"
                            d:DataContext="{d:DesignInstance Type={x:Type vm:ToastViewModel},IsDesignTimeCreatable=True}"
                            xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                            mc:Ignorable="d"
                            SnapsToDevicePixels="True">
                        <ContentPresenter Content="{Binding Title}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                        </ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="Opening">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd"
                                                                   Storyboard.TargetProperty="(UIElement.Visibility)">
                                        <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                            <DiscreteObjectKeyFrame.Value>
                                                <Visibility>Visible</Visibility>
                                            </DiscreteObjectKeyFrame.Value>
                                        </DiscreteObjectKeyFrame>
                                    </ObjectAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Bd"
                                                                   Storyboard.TargetProperty="(UIElement.Opacity)">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0" Value="0" />
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.400" Value="1" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Closing">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd"
                                                                   Storyboard.TargetProperty="(UIElement.Visibility)">
                                        <DiscreteObjectKeyFrame KeyTime="0:0:0.500">
                                            <DiscreteObjectKeyFrame.Value>
                                                <Visibility>Collapsed</Visibility>
                                            </DiscreteObjectKeyFrame.Value>
                                        </DiscreteObjectKeyFrame>
                                    </ObjectAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Bd"
                                                                   Storyboard.TargetProperty="(UIElement.Opacity)">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0" Value="1" />
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.400" Value="0" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- 
        对话框宿主
        @ 用来给用户制造烦躁感的指示器。
    -->
    <Style TargetType="{x:Type c:BannerContentHost}">
        <Setter Property="Color" Value="{StaticResource Brushes.MaterialDesign.Blue}"/>
        <Setter Property="BannerTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image Source="{Binding}"
                           Stretch="UniformToFill"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="TitleTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Text="{Binding}"
                               FontSize="28"
                               FontWeight="Bold"
                               TextWrapping="Wrap"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="SubtitleTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Text="{Binding}"
                               Foreground="#A1A1A1"
                               FontSize="14"
                               TextWrapping="Wrap"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c:BannerContentHost}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="{TemplateBinding BannerHeight}"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition/>
                                <RowDefinition Height="48"/>
                            </Grid.RowDefinitions>
                            
                            <p:TiledPanel Grid.Row="0"
                                          Background="{TemplateBinding Color}">
                                <ContentPresenter ContentSource="Banner"/>
                                <pb:CloseButton HorizontalAlignment="Right"
                                                VerticalAlignment="Top"
                                                Margin="16"
                                                Command="{x:Static cmds:WindowCommands.Cancel}"/>
                            </p:TiledPanel>
                            
                            <ContentPresenter Grid.Row="1"
                                              ContentSource="Title"
                                              HorizontalAlignment="Left"
                                              VerticalAlignment="Stretch"
                                              Margin="32 32 32 8"/>
                            
                            <ContentPresenter Grid.Row="2"
                                              ContentSource="Subtitle"
                                              HorizontalAlignment="Left"
                                              VerticalAlignment="Stretch"
                                              Margin="32 0 32 16"/>
                            
                            <ContentPresenter Grid.Row="3"
                                              ContentSource="Content"
                                              HorizontalAlignment="Stretch"
                                              VerticalAlignment="Stretch"
                                              Margin="32 8"/>
                            
                            <ContentPresenter Grid.Row="4"
                                              ContentSource="Toolbar"
                                              HorizontalAlignment="Stretch"
                                              VerticalAlignment="Stretch"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>