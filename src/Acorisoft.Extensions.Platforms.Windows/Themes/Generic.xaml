<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:c="clr-namespace:Acorisoft.Extensions.Platforms.Windows.Controls"
                    xmlns:pb="clr-namespace:Acorisoft.Extensions.Platforms.Windows.Controls.Primitives"
                    xmlns:d="clr-namespace:Acorisoft.Extensions.Platforms.Windows.Controls.Dialogs"
                    xmlns:bi="clr-namespace:Acorisoft.Extensions.Platforms.Windows.Controls.BusyIndicator"
                    xmlns:p="clr-namespace:Acorisoft.Extensions.Platforms.Windows.Controls.Panels"
                    xmlns:t="clr-namespace:Acorisoft.Extensions.Platforms.Windows.Controls.Toasts"
                    xmlns:b="clr-namespace:Acorisoft.Extensions.Platforms.Windows.Controls.Buttons"
                    xmlns:w="clr-namespace:Acorisoft.Extensions.Platforms.Windows"
                    xmlns:converters="clr-namespace:Acorisoft.Extensions.Platforms.Windows.Converters"
                    xmlns:cmds="clr-namespace:Acorisoft.Extensions.Platforms.Windows.Commands"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:rx="http://reactiveui.net"
                    xmlns:vm="clr-namespace:Acorisoft.Extensions.Platforms.Windows.ViewModels;assembly=Acorisoft.Extensions.Platforms"
                    xmlns:o="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary
            Source="pack://application:,,,/Acorisoft.Extensions.Platforms.Windows;component/Windows/SpaWindow.xaml" />
        <ResourceDictionary
            Source="pack://application:,,,/Acorisoft.Extensions.Platforms.Windows;component/Windows/Controls/IxContentHost.xaml" />
        <ResourceDictionary
            Source="pack://application:,,,/Acorisoft.Extensions.Platforms.Windows;component/Windows/Controls/FormFields.xaml"/>
        <ResourceDictionary
            Source="pack://application:,,,/Acorisoft.Extensions.Platforms.Windows;component/Themes/Banner.xaml" />
        <ResourceDictionary
            Source="pack://application:,,,/Acorisoft.Extensions.Platforms.Windows;component/Themes/Icon.xaml" />
        <ResourceDictionary
            Source="pack://application:,,,/Acorisoft.Extensions.Platforms.Windows;component/Themes/Colors.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <SolidColorBrush x:Key="App.Dark.Mask">#90000000</SolidColorBrush>
    <SolidColorBrush x:Key="App.Dark.Lighten.Mask">#30000000</SolidColorBrush>
    <SolidColorBrush x:Key="App.White.Lighten.Mask">#50FFFFFF</SolidColorBrush>
    <SolidColorBrush x:Key="App.White.Darken.Mask">#90FFFFFF</SolidColorBrush>
    <SolidColorBrush x:Key="App.Text.Primary">#3c4858</SolidColorBrush>
    <SolidColorBrush x:Key="App.Text.Secondary">#8492a6</SolidColorBrush>
    <converters:String2IntConverter x:Key="String2IntConverter"/>

    <!-- 
        烦躁指示器
        @ 用来给用户制造烦躁感的指示器。
    -->

    <Style TargetType="{x:Type pb:CloseButton}">
        <Setter Property="MinHeight" Value="32" />
        <Setter Property="MinWidth" Value="32" />
        <Setter Property="Background" Value="{StaticResource Brushes.Transparent}" />
        <Setter Property="Foreground" Value="{StaticResource Brushes.White}" />
        <Setter Property="HoverBackgroundBrush" Value="{StaticResource App.Dark.Lighten.Mask}" />
        <Setter Property="HoverForegroundBrush" Value="{StaticResource Brushes.Black}" />
        <Setter Property="PressBackgroundBrush" Value="{StaticResource App.Dark.Mask}" />
        <Setter Property="PressForegroundBrush" Value="{StaticResource Brushes.Black}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type pb:CloseButton}">
                    <Border x:Name="PART_Border" Background="{TemplateBinding Background}">
                        <Path x:Name="PART_Icon"
                              Data="M0.7,0 L5,4.3 L9.3,0 L10,0.7 L5.7,5 L10,9.3 L9.3,10 L5,5.7 L0.7,10 L0,9.3 L4.3,5 L0,0.7 z"
                              Width="15"
                              Height="15"
                              SnapsToDevicePixels="True"
                              Stretch="Uniform"
                              Fill="{TemplateBinding Foreground}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background"
                                    Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=HoverBackgroundBrush}"
                                    TargetName="PART_Border" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background"
                                    Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=PressBackgroundBrush}"
                                    TargetName="PART_Border" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- 
        烦躁指示器
        @ 用来给用户制造烦躁感的指示器。
    -->

    <Style TargetType="{x:Type bi:ActivityIndicator}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type bi:ActivityIndicator}">
                    <p:TiledPanel>
                        <ContentPresenter ContentSource="Content" />

                        <!-- 对话框-->
                        <Border x:Name="PART_Border" Background="{StaticResource App.Dark.Lighten.Mask}"
                                Visibility="Collapsed">
                            <!-- 对话框载体需要自己设置一个长度和宽度 -->
                            <Border Background="White"
                                    Padding="16"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Center"
                                    Width="160">
                                <StackPanel>
                                    <TextBlock Text="{TemplateBinding Description}"
                                               Padding="0 0 0 8"
                                               FontSize="13"
                                               TextWrapping="Wrap" />
                                    <ProgressBar x:Name="PART_Indicator"
                                                 IsIndeterminate="True"
                                                 MinHeight="6" />
                                </StackPanel>
                            </Border>
                        </Border>
                    </p:TiledPanel>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="DialogOpening">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Border"
                                                                   Storyboard.TargetProperty="(UIElement.Visibility)">
                                        <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                            <DiscreteObjectKeyFrame.Value>
                                                <Visibility>Visible</Visibility>
                                            </DiscreteObjectKeyFrame.Value>
                                        </DiscreteObjectKeyFrame>
                                    </ObjectAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Border"
                                                                   Storyboard.TargetProperty="(UIElement.Opacity)">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0" Value="0" />
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.400" Value="1" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="DialogClosing">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Border"
                                                                   Storyboard.TargetProperty="(UIElement.Visibility)">
                                        <DiscreteObjectKeyFrame KeyTime="0:0:0.500">
                                            <DiscreteObjectKeyFrame.Value>
                                                <Visibility>Collapsed</Visibility>
                                            </DiscreteObjectKeyFrame.Value>
                                        </DiscreteObjectKeyFrame>
                                    </ObjectAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Border"
                                                                   Storyboard.TargetProperty="(UIElement.Opacity)">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0" Value="1" />
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.400" Value="0" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- 
        空状态视图
        @ 用来给用户制造烦躁感的指示器。
    -->
    <Style TargetType="{x:Type c:EmptyStateView}">
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c:EmptyStateView}">
                    <p:TiledPanel>
                        <ContentPresenter x:Name="PART_Content" ContentSource="Content" />
                        <ContentPresenter x:Name="PART_EmptyState" ContentSource="EmptyState" />
                    </p:TiledPanel>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="ContentOpening">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Content"
                                                                   Storyboard.TargetProperty="(UIElement.Visibility)">
                                        <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                            <DiscreteObjectKeyFrame.Value>
                                                <Visibility>Visible</Visibility>
                                            </DiscreteObjectKeyFrame.Value>
                                        </DiscreteObjectKeyFrame>
                                    </ObjectAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Content"
                                                                   Storyboard.TargetProperty="(UIElement.Opacity)">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0" Value="0" />
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.400" Value="1" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="ContentClosing">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Content"
                                                                   Storyboard.TargetProperty="(UIElement.Visibility)">
                                        <DiscreteObjectKeyFrame KeyTime="0:0:0.500">
                                            <DiscreteObjectKeyFrame.Value>
                                                <Visibility>Collapsed</Visibility>
                                            </DiscreteObjectKeyFrame.Value>
                                        </DiscreteObjectKeyFrame>
                                    </ObjectAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Content"
                                                                   Storyboard.TargetProperty="(UIElement.Opacity)">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0" Value="1" />
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.400" Value="0" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="EmptyStateOpening">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_EmptyState"
                                                                   Storyboard.TargetProperty="(UIElement.Visibility)">
                                        <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                            <DiscreteObjectKeyFrame.Value>
                                                <Visibility>Visible</Visibility>
                                            </DiscreteObjectKeyFrame.Value>
                                        </DiscreteObjectKeyFrame>
                                    </ObjectAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_EmptyState"
                                                                   Storyboard.TargetProperty="(UIElement.Opacity)">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0" Value="0" />
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.400" Value="1" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="EmptyStateClosing">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_EmptyState"
                                                                   Storyboard.TargetProperty="(UIElement.Visibility)">
                                        <DiscreteObjectKeyFrame KeyTime="0:0:0.500">
                                            <DiscreteObjectKeyFrame.Value>
                                                <Visibility>Collapsed</Visibility>
                                            </DiscreteObjectKeyFrame.Value>
                                        </DiscreteObjectKeyFrame>
                                    </ObjectAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_EmptyState"
                                                                   Storyboard.TargetProperty="(UIElement.Opacity)">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0" Value="1" />
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.400" Value="0" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- 
        对话框宿主
        @ 用来给用户制造烦躁感的指示器。
    -->
    <Style TargetType="{x:Type d:DialogHost}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type d:DialogHost}">
                    <p:TiledPanel>
                        <ContentPresenter ContentSource="Content" />

                        <!-- 对话框-->
                        <Border x:Name="PART_Dialog" Background="{StaticResource App.Dark.Mask}" Visibility="Collapsed">

                            <!-- 对话框载体需要自己设置一个长度和宽度 -->
                            <rx:ViewModelViewHost ViewModel="{TemplateBinding Dialog}"
                                                  HorizontalAlignment="Center"
                                                  VerticalAlignment="Center"
                                                  HorizontalContentAlignment="Center"
                                                  VerticalContentAlignment="Center"
                                                  MinWidth="96"
                                                  MinHeight="96"
                                                  Duration="0:0:0" />
                        </Border>
                    </p:TiledPanel>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="DialogOpening">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Dialog"
                                                                   Storyboard.TargetProperty="(UIElement.Visibility)">
                                        <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                            <DiscreteObjectKeyFrame.Value>
                                                <Visibility>Visible</Visibility>
                                            </DiscreteObjectKeyFrame.Value>
                                        </DiscreteObjectKeyFrame>
                                    </ObjectAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Dialog"
                                                                   Storyboard.TargetProperty="(UIElement.Opacity)">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0" Value="0" />
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.400" Value="1" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="DialogClosing">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Dialog"
                                                                   Storyboard.TargetProperty="(UIElement.Visibility)">
                                        <DiscreteObjectKeyFrame KeyTime="0:0:0.500">
                                            <DiscreteObjectKeyFrame.Value>
                                                <Visibility>Collapsed</Visibility>
                                            </DiscreteObjectKeyFrame.Value>
                                        </DiscreteObjectKeyFrame>
                                    </ObjectAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Dialog"
                                                                   Storyboard.TargetProperty="(UIElement.Opacity)">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0" Value="1" />
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.400" Value="0" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- 
        对话框宿主
        @ 用来给用户制造烦躁感的指示器。
    -->
    <Style TargetType="{x:Type t:ToastHost}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type t:ToastHost}">
                    <p:TiledPanel>
                        <ContentPresenter ContentSource="Content" />

                        <!-- 对话框-->
                        <ContentPresenter ContentSource="Toast"
                                          VerticalAlignment="Center"
                                          HorizontalAlignment="Center" />
                    </p:TiledPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- 
        对话框宿主
        @ 用来给用户制造烦躁感的指示器。
    -->
    <Style TargetType="{x:Type t:Toast}">
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type t:Toast}">
                    <!-- 对话框-->
                    <Border x:Name="Bd"
                            Background="#FFDA96"
                            BorderThickness="1"
                            BorderBrush="#FFAB12"
                            Visibility="Collapsed"
                            Padding="24 4"
                            MinWidth="64"
                            MinHeight="24"
                            DataContext="{TemplateBinding DataContext}"
                            d:DataContext="{d:DesignInstance Type={x:Type vm:ToastViewModel},IsDesignTimeCreatable=True}"
                            xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                            mc:Ignorable="d"
                            SnapsToDevicePixels="True">
                        <ContentPresenter Content="{Binding Title}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="Opening">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd"
                                                                   Storyboard.TargetProperty="(UIElement.Visibility)">
                                        <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                            <DiscreteObjectKeyFrame.Value>
                                                <Visibility>Visible</Visibility>
                                            </DiscreteObjectKeyFrame.Value>
                                        </DiscreteObjectKeyFrame>
                                    </ObjectAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Bd"
                                                                   Storyboard.TargetProperty="(UIElement.Opacity)">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0" Value="0" />
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.400" Value="1" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Closing">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd"
                                                                   Storyboard.TargetProperty="(UIElement.Visibility)">
                                        <DiscreteObjectKeyFrame KeyTime="0:0:0.500">
                                            <DiscreteObjectKeyFrame.Value>
                                                <Visibility>Collapsed</Visibility>
                                            </DiscreteObjectKeyFrame.Value>
                                        </DiscreteObjectKeyFrame>
                                    </ObjectAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Bd"
                                                                   Storyboard.TargetProperty="(UIElement.Opacity)">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0" Value="1" />
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.400" Value="0" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- 
        对话框宿主
        @ 用来给用户制造烦躁感的指示器。
    -->
    <Style TargetType="{x:Type c:BannerDialogHost}">
        <Setter Property="Color" Value="{StaticResource Brushes.MaterialDesign.Blue}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="BannerTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image Source="{Binding}"
                           Stretch="UniformToFill" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="TitleTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Text="{Binding}"
                               FontSize="28"
                               Foreground="{StaticResource App.Text.Primary}"
                               FontWeight="Bold"
                               TextWrapping="Wrap" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="SubtitleTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Text="{Binding}"
                               Foreground="{StaticResource App.Text.Secondary}"
                               FontSize="14"
                               TextWrapping="Wrap" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c:BannerDialogHost}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="{TemplateBinding BannerHeight}" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition />
                                <RowDefinition Height="48" />
                            </Grid.RowDefinitions>

                            <p:TiledPanel Grid.Row="0"
                                          Background="{TemplateBinding Color}">
                                <ContentPresenter ContentSource="Banner" />
                                <pb:CloseButton HorizontalAlignment="Right"
                                                VerticalAlignment="Top"
                                                Margin="16"
                                                Command="{x:Static cmds:WindowCommands.Cancel}" />
                            </p:TiledPanel>

                            <ContentPresenter Grid.Row="1"
                                              ContentSource="Title"
                                              HorizontalAlignment="Left"
                                              VerticalAlignment="Stretch"
                                              Margin="32 32 32 8" />

                            <ContentPresenter Grid.Row="2"
                                              ContentSource="Subtitle"
                                              HorizontalAlignment="Left"
                                              VerticalAlignment="Stretch"
                                              Margin="32 0 32 16" />

                            <ContentPresenter Grid.Row="3"
                                              ContentSource="Content"
                                              HorizontalAlignment="Stretch"
                                              VerticalAlignment="Stretch"
                                              Margin="32 8" />

                            <ContentPresenter Grid.Row="4"
                                              ContentSource="Toolbar"
                                              HorizontalAlignment="Stretch"
                                              VerticalAlignment="Stretch" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- 
        对话框宿主
        @ 用来给用户制造烦躁感的指示器。
    -->
    <Style TargetType="{x:Type b:OverlayButton}">
        <Setter Property="MinHeight" Value="32" />
        <Setter Property="MinWidth" Value="32" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="Background" Value="{StaticResource Brushes.Commons.Background}" />
        <Setter Property="Foreground" Value="{StaticResource Brushes.Commons.Foreground}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type b:OverlayButton}">
                    <Border x:Name="PART_Border" Background="{TemplateBinding Background}">
                        <p:TiledPanel>
                            <ContentPresenter ContentSource="Content"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />

                            <ContentPresenter x:Name="PART_Overlay"
                                              ContentSource="Overlay"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Visibility="Collapsed" />
                        </p:TiledPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value=".5" TargetName="PART_Border"/>
                        </Trigger>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Overlay"
                                                                   Storyboard.TargetProperty="Opacity">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0" Value="0" />
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.400" Value="1" />
                                    </DoubleAnimationUsingKeyFrames>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Overlay"
                                                                   Storyboard.TargetProperty="Visibility">
                                        <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                            <DiscreteObjectKeyFrame.Value>
                                                <Visibility>Collapsed</Visibility>
                                            </DiscreteObjectKeyFrame.Value>
                                        </DiscreteObjectKeyFrame>
                                    </ObjectAnimationUsingKeyFrames>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Overlay"
                                                                   Storyboard.TargetProperty="Visibility">
                                        <DiscreteObjectKeyFrame KeyTime="0:0:0.100">
                                            <DiscreteObjectKeyFrame.Value>
                                                <Visibility>Visible</Visibility>
                                            </DiscreteObjectKeyFrame.Value>
                                        </DiscreteObjectKeyFrame>
                                    </ObjectAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Overlay"
                                                                   Storyboard.TargetProperty="Opacity">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0" Value="1" />
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.400" Value="0" />
                                    </DoubleAnimationUsingKeyFrames>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Overlay"
                                                                   Storyboard.TargetProperty="Visibility">
                                        <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                            <DiscreteObjectKeyFrame.Value>
                                                <Visibility>Visible</Visibility>
                                            </DiscreteObjectKeyFrame.Value>
                                        </DiscreteObjectKeyFrame>
                                    </ObjectAnimationUsingKeyFrames>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Overlay"
                                                                   Storyboard.TargetProperty="Visibility">
                                        <DiscreteObjectKeyFrame KeyTime="0:0:0.450">
                                            <DiscreteObjectKeyFrame.Value>
                                                <Visibility>Collapsed</Visibility>
                                            </DiscreteObjectKeyFrame.Value>
                                        </DiscreteObjectKeyFrame>
                                    </ObjectAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="{x:Type c:OverlayContentControl}">
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c:OverlayContentControl}">
                    <Border x:Name="PART_Border" Background="{TemplateBinding Background}">
                        <p:TiledPanel>
                            <ContentPresenter ContentSource="Content"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />

                            <ContentPresenter x:Name="PART_Overlay"
                                              ContentSource="Overlay"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Visibility="Collapsed" />
                        </p:TiledPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value=".5" TargetName="PART_Border"/>
                        </Trigger>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Overlay"
                                                                   Storyboard.TargetProperty="Opacity">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0" Value="0" />
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.400" Value="1" />
                                    </DoubleAnimationUsingKeyFrames>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Overlay"
                                                                   Storyboard.TargetProperty="Visibility">
                                        <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                            <DiscreteObjectKeyFrame.Value>
                                                <Visibility>Collapsed</Visibility>
                                            </DiscreteObjectKeyFrame.Value>
                                        </DiscreteObjectKeyFrame>
                                    </ObjectAnimationUsingKeyFrames>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Overlay"
                                                                   Storyboard.TargetProperty="Visibility">
                                        <DiscreteObjectKeyFrame KeyTime="0:0:0.100">
                                            <DiscreteObjectKeyFrame.Value>
                                                <Visibility>Visible</Visibility>
                                            </DiscreteObjectKeyFrame.Value>
                                        </DiscreteObjectKeyFrame>
                                    </ObjectAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Overlay"
                                                                   Storyboard.TargetProperty="Opacity">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0" Value="1" />
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.400" Value="0" />
                                    </DoubleAnimationUsingKeyFrames>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Overlay"
                                                                   Storyboard.TargetProperty="Visibility">
                                        <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                            <DiscreteObjectKeyFrame.Value>
                                                <Visibility>Visible</Visibility>
                                            </DiscreteObjectKeyFrame.Value>
                                        </DiscreteObjectKeyFrame>
                                    </ObjectAnimationUsingKeyFrames>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Overlay"
                                                                   Storyboard.TargetProperty="Visibility">
                                        <DiscreteObjectKeyFrame KeyTime="0:0:0.450">
                                            <DiscreteObjectKeyFrame.Value>
                                                <Visibility>Collapsed</Visibility>
                                            </DiscreteObjectKeyFrame.Value>
                                        </DiscreteObjectKeyFrame>
                                    </ObjectAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
     <Style TargetType="{x:Type b:SymbolContentButton}">
        <Setter Property="MinHeight" Value="32" />
        <Setter Property="MinWidth" Value="32" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="{StaticResource Brushes.Commons.Background}" />
        <Setter Property="Foreground" Value="{StaticResource Brushes.Commons.Foreground}" />
        <Setter Property="Highlight" Value="{StaticResource  Brushes.MaterialDesign.Blue}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type b:SymbolContentButton}">
                    <Border x:Name="PART_Border" Background="{TemplateBinding Background}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="48"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <ContentPresenter x:Name="PART_Content"
                                               Grid.Column="1" 
                                               ContentSource="Content"
                                               VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                               HorizontalAlignment="Left" />

                            <Path Grid.Column="0" x:Name="PART_Icon"
                                  Data="{TemplateBinding Symbol}"
                                  Width="24"
                                  Height="24"
                                  Stroke="{TemplateBinding Foreground}"
                                  StrokeThickness="1"
                                  VerticalAlignment="Center"
                                  HorizontalAlignment="Center"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                       <Trigger Property="IsMouseOver" Value="True">
                           <Setter Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Highlight}" TargetName="PART_Content"/>
                           <Setter Property="Stroke" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Highlight}" TargetName="PART_Icon"/>
                       </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Highlight}" TargetName="PART_Content"/>
                            <Setter Property="Stroke" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Highlight}" TargetName="PART_Icon"/>
                            <Setter Property="Background" Value="{StaticResource App.White.Darken.Mask}" TargetName="PART_Border"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value=".5" TargetName="PART_Border"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="SymbolContentButton.Center" TargetType="{x:Type b:SymbolContentButton}">
        <Setter Property="MinHeight" Value="32" />
        <Setter Property="MinWidth" Value="32" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="{StaticResource Brushes.Commons.Background}" />
        <Setter Property="Foreground" Value="{StaticResource Brushes.Commons.Foreground}" />
        <Setter Property="Highlight" Value="{StaticResource  Brushes.MaterialDesign.Blue}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type b:SymbolContentButton}">
                    <Border x:Name="PART_Border" Background="{TemplateBinding Background}">
                        <Grid HorizontalAlignment="Center">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="48"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <ContentPresenter x:Name="PART_Content"
                                               Grid.Column="1" 
                                               ContentSource="Content"
                                               VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                               HorizontalAlignment="Left" />

                            <Path Grid.Column="0" x:Name="PART_Icon"
                                  Data="{TemplateBinding Symbol}"
                                  Width="24"
                                  Height="24"
                                  Stroke="{TemplateBinding Foreground}"
                                  StrokeThickness="1"
                                  VerticalAlignment="Center"
                                  HorizontalAlignment="Center"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                       <Trigger Property="IsMouseOver" Value="True">
                           <Setter Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Highlight}" TargetName="PART_Content"/>
                           <Setter Property="Stroke" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Highlight}" TargetName="PART_Icon"/>
                       </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Highlight}" TargetName="PART_Content"/>
                            <Setter Property="Stroke" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Highlight}" TargetName="PART_Icon"/>
                            <Setter Property="Background" Value="{StaticResource App.White.Darken.Mask}" TargetName="PART_Border"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value=".5" TargetName="PART_Border"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="{x:Type b:SymbolButton}">
        <Setter Property="MinHeight" Value="32" />
        <Setter Property="MinWidth" Value="32" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="{StaticResource Brushes.Commons.Background}" />
        <Setter Property="Foreground" Value="{StaticResource Brushes.Commons.Foreground}" />
        <Setter Property="Highlight" Value="{StaticResource  Brushes.MaterialDesign.Blue}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type b:SymbolButton}">
                    <Border x:Name="PART_Border" Background="{TemplateBinding Background}">
                        <Path Grid.Column="0" x:Name="PART_Icon"
                              Data="{TemplateBinding Symbol}"
                              Width="24"
                              Height="24"
                              Stroke="{TemplateBinding Foreground}"
                              StrokeThickness="1"
                              VerticalAlignment="Center"
                              HorizontalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                       <Trigger Property="IsMouseOver" Value="True">
                           <Setter Property="Stroke" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Highlight}" TargetName="PART_Icon"/>
                       </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Stroke" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Highlight}" TargetName="PART_Icon"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value=".5" TargetName="PART_Border"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
        <Style x:Key="SymbolButton.VeryLarge" TargetType="{x:Type b:SymbolButton}">
        <Setter Property="Height" Value="128" />
        <Setter Property="Width" Value="128" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="{StaticResource Brushes.Commons.Background}" />
        <Setter Property="Foreground" Value="{StaticResource Brushes.Commons.Foreground}" />
        <Setter Property="Highlight" Value="{StaticResource  Brushes.MaterialDesign.Blue}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type b:SymbolButton}">
                    <Border x:Name="PART_Border" Background="{TemplateBinding Background}">
                        <Path x:Name="PART_Icon"
                              Data="{TemplateBinding Symbol}"
                              Width="72"
                              Height="72"
                              Stretch="Uniform"
                              Stroke="{TemplateBinding Foreground}"
                              StrokeThickness="1"
                              VerticalAlignment="Center"
                              HorizontalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Stroke"
                                    Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Highlight}"
                                    TargetName="PART_Icon" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Stroke"
                                    Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Highlight}"
                                    TargetName="PART_Icon" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value=".5" TargetName="PART_Border" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type c:Headline1Control}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="TitleTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Text="{Binding Mode=OneWay}"
                               FontSize="32"
                               FontWeight="Bold"
                               Foreground="{StaticResource App.Text.Primary}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="SubtitleTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Text="{Binding Mode=OneWay}"
                               FontSize="15"
                               FontWeight="Bold"
                               Foreground="{StaticResource App.Text.Secondary}" 
                               TextWrapping="Wrap"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c:Headline1Control}">
                    <Grid Background="{TemplateBinding Background}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <ContentPresenter Grid.Row="0" ContentSource="Title"
                                          Margin="0 24" />
                        <ContentPresenter Grid.Row="1" ContentSource="Subtitle"
                                          Margin="0 10" />
                        <ContentPresenter Grid.Row="2" ContentSource="Content" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="{x:Type c:Headline2Control}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="TitleTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Text="{Binding Mode=OneWay}"
                               FontSize="24"
                               FontWeight="Bold"
                               Foreground="{StaticResource App.Text.Primary}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="SubtitleTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Text="{Binding Mode=OneWay}"
                               FontSize="15"
                               FontWeight="Bold"
                               Foreground="{StaticResource App.Text.Secondary}" 
                               TextWrapping="Wrap"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c:Headline2Control}">
                    <Grid Background="{TemplateBinding Background}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <ContentPresenter Grid.Row="0" ContentSource="Title"
                                          Margin="0 20" />
                        <ContentPresenter Grid.Row="1" ContentSource="Subtitle"
                                          Margin="0 10" />
                        <ContentPresenter Grid.Row="2" ContentSource="Content" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="{x:Type c:Headline3Control}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="TitleTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Text="{Binding Mode=OneWay}"
                               FontSize="18"
                               FontWeight="Bold"
                               Foreground="{StaticResource App.Text.Primary}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="SubtitleTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Text="{Binding Mode=OneWay}"
                               FontSize="15"
                               FontWeight="Bold"
                               Foreground="{StaticResource App.Text.Secondary}"
                               TextWrapping="Wrap"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c:Headline3Control}">
                    <Grid Background="{TemplateBinding Background}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <ContentPresenter Grid.Row="0" ContentSource="Title"
                                          Margin="0 16" />
                        <ContentPresenter Grid.Row="1" ContentSource="Subtitle"
                                          Margin="0 10" />
                        <ContentPresenter Grid.Row="2" ContentSource="Content" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="{x:Type c:Headline1HeaderToolbar}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="TitleTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Text="{Binding Mode=OneWay}"
                               FontSize="24"
                               FontWeight="Bold"
                               Foreground="{StaticResource App.Text.Primary}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="SubtitleTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Text="{Binding Mode=OneWay}"
                               FontSize="15"
                               FontWeight="Bold"
                               Foreground="{StaticResource App.Text.Secondary}" 
                               TextWrapping="Wrap"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c:Headline1HeaderToolbar}">
                    <Grid Background="{TemplateBinding Background}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <ContentPresenter Grid.Row="0" ContentSource="Title"
                                           Margin="{TemplateBinding Padding}"/>
                        <ContentPresenter Grid.Row="1" ContentSource="Subtitle"
                                          HorizontalAlignment="Left"
                                          VerticalAlignment="Top"
                                           Margin="{TemplateBinding Padding}"/>
                        <ContentPresenter Grid.Row="1"
                                          ContentSource="ToolBar"
                                          HorizontalAlignment="Right"
                                          VerticalAlignment="Top"
                                           Margin="{TemplateBinding Padding}"/>
                        <ContentPresenter Grid.Row="2" ContentSource="Content" Margin="{TemplateBinding Padding}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="{x:Type c:Headline2HeaderToolbar}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="TitleTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Text="{Binding Mode=OneWay}"
                               FontSize="24"
                               FontWeight="Bold"
                               Foreground="{StaticResource App.Text.Primary}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="SubtitleTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Text="{Binding Mode=OneWay}"
                               FontSize="15"
                               FontWeight="Bold"
                               Foreground="{StaticResource App.Text.Secondary}" 
                               TextWrapping="Wrap"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c:Headline2HeaderToolbar}">
                    <Grid Background="{TemplateBinding Background}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <ContentPresenter Grid.Row="0" ContentSource="Title"/>
                        <ContentPresenter Grid.Row="1" ContentSource="Subtitle"
                                          Margin="0 10"
                                          HorizontalAlignment="Left"
                                          VerticalAlignment="Top"/>
                        <ContentPresenter Grid.Row="1"
                                          ContentSource="ToolBar"
                                          HorizontalAlignment="Right"
                                          VerticalAlignment="Top"/>
                        <ContentPresenter Grid.Row="2" ContentSource="Content" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="{x:Type c:Headline3HeaderToolbar}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="TitleTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Text="{Binding Mode=OneWay}"
                               FontSize="18"
                               FontWeight="Bold"
                               Foreground="{StaticResource App.Text.Primary}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="SubtitleTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Text="{Binding Mode=OneWay}"
                               FontSize="15"
                               FontWeight="Bold"
                               Foreground="{StaticResource App.Text.Secondary}"
                               TextWrapping="Wrap"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c:Headline3HeaderToolbar}">
                    <Grid Background="{TemplateBinding Background}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <ContentPresenter Grid.Row="0" ContentSource="Title"/>
                        <ContentPresenter Grid.Row="1" ContentSource="Subtitle"
                                          Margin="0 10"
                                          HorizontalAlignment="Left"
                                          VerticalAlignment="Top"/>
                        <ContentPresenter Grid.Row="1"
                                          ContentSource="ToolBar"
                                          HorizontalAlignment="Right"
                                          VerticalAlignment="Top"/>
                        <ContentPresenter Grid.Row="2" ContentSource="Content" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="{x:Type c:PaginationButton}">
        <Setter Property="MinHeight" Value="32" />
        <Setter Property="MinWidth" Value="32" />
        <Setter Property="Background" Value="{StaticResource Brushes.White}" />
        <Setter Property="Foreground" Value="{StaticResource Brushes.Black}" />
        <Setter Property="BorderBrush" Value="{StaticResource Brushes.Black}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c:PaginationButton}">
                    <Border x:Name="PART_Border" 
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="3">
                        <ContentPresenter Content="{TemplateBinding Page}"
                                          VerticalAlignment="Center"
                                          HorizontalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource App.White.Lighten.Mask}" TargetName="PART_Border" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource App.White.Darken.Mask}" TargetName="PART_Border" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="PaginationButton.Content" TargetType="{x:Type c:PaginationButton}">
        <Setter Property="MinHeight" Value="32" />
        <Setter Property="MinWidth" Value="32" />
        <Setter Property="Background" Value="{StaticResource Brushes.White}" />
        <Setter Property="Foreground" Value="{StaticResource Brushes.Black}" />
        <Setter Property="BorderBrush" Value="{StaticResource Brushes.Black}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c:PaginationButton}">
                    <Border x:Name="PART_Border" 
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="3">
                        <ContentPresenter ContentSource="Content"
                                          VerticalAlignment="Center"
                                          HorizontalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource App.White.Lighten.Mask}" TargetName="PART_Border" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource App.White.Darken.Mask}" TargetName="PART_Border" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="{x:Type c:Pagination}">
        <Setter Property="Background" Value="{StaticResource Brushes.Transparent}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c:Pagination}">
                    <Grid Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <c:PaginationButton x:Name="PART_First" Grid.Column="0" Style="{StaticResource PaginationButton.Content}" Content="&lt;&lt;"/>
                        <c:PaginationButton x:Name="PART_LastPage" Grid.Column="1" Style="{StaticResource PaginationButton.Content}" Content="&lt;"/>
                        <c:PaginationButton x:Name="PART_Previous" Grid.Column="2" Style="{StaticResource PaginationButton.Content}" Content="&lt;"/>
                        <StackPanel x:Name="PART_ItemsPanel" Grid.Column="3" Orientation="Horizontal"/>
                        <c:PaginationButton x:Name="PART_Next" Grid.Column="4" Style="{StaticResource PaginationButton.Content}" Content="&lt;"/>
                        <c:PaginationButton x:Name="PART_NextPage" Grid.Column="5" Style="{StaticResource PaginationButton.Content}" Content="&gt;"/>
                        <c:PaginationButton x:Name="PART_Last" Grid.Column="6" Style="{StaticResource PaginationButton.Content}" Content="&gt;&gt;"/>
                        <TextBlock Grid.Column="7" Text="跳转到:"/>
                        <TextBox x:Name="PART_Goto" Grid.Column="8"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="{x:Type c:SearchBox}">
        <Setter Property="Background" Value="{StaticResource Brushes.White}"/>
        <Setter Property="BorderBrush" Value="Gray"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c:SearchBox}">
                    <Border x:Name="PART_Border" 
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="8"
                            SnapsToDevicePixels="True">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="32"/>
                                <ColumnDefinition Width="48"/>
                            </Grid.ColumnDefinitions>
                            <TextBox x:Name="PART_Text" 
                                     Grid.Column="0"
                                     Background="{StaticResource Brushes.Transparent}"
                                     Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Text,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                     Padding="{TemplateBinding Padding}"
                                     BorderThickness="0" BorderBrush="{x:Null}"
                                     HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                     VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <b:SymbolButton x:Name="PART_Clear" Symbol="{StaticResource Icon.Clear}" Grid.Column="1" Visibility="Collapsed"/>
                            <b:SymbolButton x:Name="PART_Search" Symbol="{StaticResource Icon.Search}" Grid.Column="2" Margin="0 0 16 0"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource Brushes.MaterialDesign.Blue}" TargetName="PART_Border"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True" SourceName="PART_Text">
                            <Setter Property="Effect" Value="{StaticResource Effect.Shadow2}" TargetName="PART_Border"/>
                            <Setter Property="BorderBrush" Value="{StaticResource Brushes.MaterialDesign.Blue}" TargetName="PART_Border"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>